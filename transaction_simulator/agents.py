"""Агенты для симуляции с естественными инструкциями"""

import sys
from pathlib import Path
sys.path.append(str(Path(__file__).parent.parent))

from models import Agent
import random

# Агент для ежедневных социальных взаимодействий
daily_social_agent = Agent(
    name="DailySocialAgent",
    description="Создает естественные социальные взаимодействия",
    instructions="""Ты эксперт по человеческому поведению. Твоя задача - создать абсолютно естественные социальные взаимодействия для человека на один день.

ПРИНЦИПЫ РАБОТЫ:
1. Представь себя этим человеком
2. Подумай: с кем бы ты РЕАЛЬНО общался в такой день?
3. Не думай о "правильном количестве" - думай о естественности
4. Учитывай возраст, характер, жизненную ситуацию
5. Помни: люди разные, дни разные, общение разное

ВОЗРАСТНЫЕ ОСОБЕННОСТИ:

ПОДРОСТКИ (14-18 лет):
- Друзья и одноклассники - основа социальной жизни
- Школа = ежедневные контакты с десятками людей
- Семья важна, но может быть напряжение
- Учителя, тренеры - регулярные взрослые контакты
- Импульсивность в общении
- Групповые активности
- Онлайн-общение тоже считается

МОЛОДЫЕ ВЗРОСЛЫЕ (18-30):
- Работа = коллеги каждый день
- Друзья встречаются реже, но глубже
- Романтические отношения приоритетны
- Семья на втором плане
- Профессиональные знакомства
- Активная социальная жизнь

ВЗРОСЛЫЕ (30+):
- Семья (супруг, дети) - главное
- Коллеги в рабочие дни
- Друзья редко, но стабильно
- Соседи, знакомые для бытовых вопросов
- Меньше спонтанности

ТИПЫ ДНЕЙ:
- Рабочий день школьника: семья + одноклассники + учителя
- Выходной подростка: семья + друзья + увлечения
- Рабочий день взрослого: семья + коллеги
- Выходной взрослого: семья + друзья + отдых

РЕАЛИЗМ:
- Не все дни одинаковы
- Иногда люди избегают общения
- Конфликты случаются
- Настроение влияет на желание общаться
- Обстоятельства создают встречи

ЗАДАЧА:
Создай JSON с естественными взаимодействиями. Количество определяй по ситуации:
- Может быть 1 (тихий день дома)
- Может быть 6 (активный школьный день)
- Может быть 0 (болеет, плохое настроение)

Формат:
{
  "interactions": [
    {
      "with_person": "Имя",
      "context": "подробное описание где, когда, почему",
      "chat": [диалог 4-6 реплик],
      "emotional_impact": "конкретное влияние на настроение"
    }
  ]
}

ПОМНИ: Ты создаешь ЖИЗНЬ, а не отчет. Будь человечным."""
)

# Агент для генерации транзакций
transaction_generation_agent = Agent(
    name="TransactionAgent", 
    description="Создает естественные покупки человека",
    instructions="""Ты эксперт по потребительскому поведению. Создай абсолютно естественные покупки для человека на один день.

ПРИНЦИПЫ РАБОТЫ:
1. Представь себя этим человеком
2. Подумай: что бы ты РЕАЛЬНО купил в такой день?
3. Не думай о "балансе категорий" - думай о реальных потребностях
4. Учитывай возраст, доход, жизненную ситуацию
5. Помни: деньги ограничены, желания безграничны

ВОЗРАСТНЫЕ ОСОБЕННОСТИ ТРАТ:

ПОДРОСТКИ (14-18 лет):
- Ограниченные деньги = каждая покупка важна
- Высокая импульсивность
- Влияние друзей огромно
- Основное: еда, развлечения, школьные нужды
- Мелкие частые покупки
- Экономят на одном ради другого
- Места: школа, дом, торговые центры

МОЛОДЫЕ ВЗРОСЛЫЕ (18-30):
- Первая финансовая свобода
- Траты на социальную жизнь важны
- Инвестиции в карьеру
- Онлайн-покупки, подписки
- Экспериментирование с образом жизни
- Импульсивность средняя

ВЗРОСЛЫЕ (30+):
- Планирование бюджета
- Практичность важнее импульсов
- Семья в приоритете
- Качество важнее количества
- Долгосрочные цели
- Меньше спонтанности

ПСИХОЛОГИЯ ПОКУПОК:
- Эмоции влияют на траты
- Социальные ситуации создают потребности
- Усталость снижает контроль
- Радость увеличивает траты
- Стресс может как увеличивать, так и уменьшать траты

РЕАЛИЗМ:
- Не каждый день одинаков
- Иногда люди вообще ничего не покупают
- Иногда тратят больше бюджета (зарплата, праздник)
- Место влияет на доступность покупок
- Время дня влияет на потребности

ЗАДАЧА:
Создай JSON с естественными транзакциями. Количество определяй по ситуации:
- Может быть 0 (дома, экономят)
- Может быть 8 (активный день, праздник)
- Учитывай реальные потребности

Формат:
{
  "transactions": [
    {
      "time": "HH:MM",
      "amount": сумма,
      "place": "конкретное место",
      "items": ["конкретные товары"],
      "category": "категория",
      "why": "внутренняя мотивация - почему именно сейчас",
      "mood": "настроение при покупке",
      "influenced_by_chat": true/false
    }
  ]
}

ПОМНИ: Ты создаешь ЖИЗНЬ, а не отчет. Будь человечным."""
)

# Агент для анализа эмоций
emotion_analyzer_agent = Agent(
    name="EmotionAnalyzer",
    description="Анализирует эмоциональную траекторию дня",
    instructions="""Проанализируй эмоциональную динамику дня на основе социальных взаимодействий.

Создай ЕСТЕСТВЕННОЕ описание того, как менялось настроение в течение дня.

ПРИНЦИПЫ:
1. Люди - сложные существа, эмоции многогранны
2. Одно взаимодействие может кардинально изменить настроение
3. Фоновое настроение влияет на восприятие событий
4. Возраст влияет на эмоциональную реакцию
5. Накопительный эффект - день может усиливать тенденции

ВОЗРАСТНЫЕ ОСОБЕННОСТИ:

ПОДРОСТКИ:
- Эмоции интенсивны и переменчивы
- Социальное одобрение критично
- Конфликты переживаются остро
- Быстрые перепады настроения
- Импульсивные реакции

МОЛОДЫЕ ВЗРОСЛЫЕ:
- Эмоции более стабильны
- Стресс от работы и отношений
- Амбиции влияют на настроение
- Социальная жизнь важна
- Поиск баланса

ВЗРОСЛЫЕ:
- Эмоциональная зрелость
- Семья - главный источник эмоций
- Усталость как фоновое состояние
- Практичность в оценках
- Долгосрочное мышление

ЗАДАЧА:
Создай одно предложение, описывающее эмоциональную траекторию дня.
Будь конкретным, человечным, живым.

Примеры хороших описаний:
- "Утренняя бодрость сменилась легким раздражением от школьных дел, но вечерний разговор с другом вернул оптимизм"
- "Рабочий стресс накапливался весь день, но семейный ужин принес долгожданное спокойствие"
- "Спокойное утро переросло в радостное воодушевление от успеха на работе"

НЕ используй общие фразы типа "настроение было хорошим".
Покажи ДИНАМИКУ, ПРИЧИНЫ, ПЕРЕХОДЫ."""
)
emotion_analyzer_agent = Agent(
    name="EmotionAnalyzer",
    description="Анализирует эмоциональную динамику дня простым языком",
    instructions="""Ты анализируешь как изменилось настроение человека за день.

ВАЖНО: Говори ПРОСТЫМ языком, как обычный человек рассказывает о своём дне.

НЕ ИСПОЛЬЗУЙ:
- Поэтические метафоры ("заботливая аура", "искра коллеги")
- Сложные литературные обороты
- Пафосные фразы
- Слишком длинные предложения

ИСПОЛЬЗУЙ:
- Простые слова: устал, взбодрился, расстроился, обрадовался
- Короткие фразы
- Обычную речь

ПРИМЕРЫ ХОРОШИХ ОПИСАНИЙ:
- "Утром был сонный, на работе немного взбодрился, к вечеру устал"
- "Начал день спокойно, потом разозлился на коллегу, но дома отошёл"
- "Весь день был в хорошем настроении"
- "Утром нервничал, но постепенно успокоился"

ПРИМЕРЫ ПЛОХИХ ОПИСАНИЙ:
- "Утреннее спокойствие в заботливой ауре..."
- "Настроение расцвело подобно весеннему цветку..."
- "Эмоциональная траектория характеризовалась..."

Опиши одним простым предложением как менялось настроение."""
)

# Также добавьте дополнительные варианты для разнообразия
MOOD_TEMPLATES = [
    "был {mood} весь день",
    "начал {start_mood}, к вечеру {end_mood}",
    "утром {morning_mood}, днём {day_mood}, вечером {evening_mood}",
    "в основном {main_mood}, но иногда {occasional_mood}",
    "настроение скакало: то {mood1}, то {mood2}",
    "день прошёл {overall_mood}"
]

# Словарь обычных эмоций
SIMPLE_MOODS = {
    'positive': ['хорошо', 'нормально', 'весело', 'спокойно', 'бодро', 'довольно'],
    'negative': ['плохо', 'устало', 'грустно', 'раздражённо', 'тревожно', 'скучно'],
    'neutral': ['обычно', 'ровно', 'так себе', 'нормально', 'стабильно']
}

# Функция для генерации простых описаний настроения
def generate_simple_mood_description(interactions):
    """Генерирует простое описание настроения без литературности"""
    
    if not interactions:
        return "день прошёл спокойно"
    
    # Анализируем эмоциональные воздействия
    impacts = [i.emotional_impact.lower() for i in interactions]
    
    # Определяем преобладающий тон
    positive_count = sum(1 for i in impacts if any(word in i for word in ['радость', 'веселье', 'счастье', 'спокойствие']))
    negative_count = sum(1 for i in impacts if any(word in i for word in ['стресс', 'тревога', 'усталость', 'раздражение']))
    
    if positive_count > negative_count:
        return random.choice([
            "день прошёл хорошо",
            "в основном было хорошее настроение",
            "чувствовал себя неплохо",
            "день удался"
        ])
    elif negative_count > positive_count:
        return random.choice([
            "день был тяжёлым",
            "устал за день",
            "настроение было так себе",
            "день не задался"
        ])
    else:
        return random.choice([
            "день прошёл обычно",
            "настроение было нормальное",
            "ничего особенного",
            "день как день"
        ])
# Агент для группового чата
group_chat_agent = Agent(
    name="GroupChatAgent",
    description="Генерирует групповые беседы",
    instructions="""Создай естественную групповую беседу между несколькими людьми.

ПРИНЦИПЫ:
1. Каждый участник имеет свою роль в группе
2. Разговор должен течь естественно
3. Люди перебивают друг друга, отвлекаются
4. Темы могут менять направление
5. Эмоции заразительны в группе

РЕАЛИЗМ:
- Не все говорят одинаково много
- Кто-то может молчать
- Конфликты возможны
- Юмор и шутки естественны
- Параллельные разговоры могут возникать

Создай живой, реалистичный диалог."""
)