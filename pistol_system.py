# pistol_system.py
import re
import random
import logging
import json
from typing import Dict, List, Optional, Set

from models import Person, Runner
from pistol_agents import mandate_desire_agent, exclusion_desire_agent

# –õ–æ–≥–≥–µ—Ä –æ—Å—Ç–∞–µ—Ç—Å—è —Ç–æ—Ç –∂–µ...
pistol_logger = logging.getLogger("pistol")
pistol_logger.setLevel(logging.INFO)
pistol_handler = logging.FileHandler("pistols.log", encoding="utf-8")
pistol_handler.setFormatter(
    logging.Formatter("[%(asctime)s] %(levelname)s - %(message)s", datefmt="%m-%d %H:%M")
)
pistol_logger.addHandler(pistol_handler)
pistol_logger.propagate = False

class PistolConfig:
    def __init__(self):
        self.enabled = True
        self.spawn_probability = 0.8
        self.max_pistols_per_round = 4
        self.min_pistols_per_round = 2
        self.duels_start_from_round = 0 

class PistolSystem:
    """Manage pistol ownership and duels."""

    def __init__(self, config=None) -> None:
        self.config = config
        self.enabled = config.enabled if config else True
        self.pistol_owners: Set[str] = set()
        self.dead_players: Set[str] = set()
        self.duel_history: List[Dict[str, str]] = []
        self.available_pistols: int = 0
        self.pistol_requests: Dict[str, Dict[str, float]] = {}
        self.current_president: Optional[str] = None
        self.logger = pistol_logger

    def is_enabled(self) -> bool:
        return self.enabled

    def parse_pistol_request(self, person_name: str, text: str) -> bool:
        """Very simple parser for a pistol request used in tests."""
        if not self.enabled or self.available_pistols <= 0:
            return False
        if re.search(r"–ø–∏—Å—Ç–æ–ª–µ—Ç|–º–∞–Ω–¥–∞—Ç", text, re.IGNORECASE):
            if person_name not in self.pistol_requests:
                self.pistol_requests[person_name] = {"text": text}
                return True
        return False

    def resolve_duel(self, duel: Dict[str, str]) -> str:
        """Simplified duel resolution for tests."""
        challenger = duel.get("challenger")
        target = duel.get("target")
        self.dead_players.update({challenger, target})
        result = f"{challenger} —É–±–∏–ª–∏ {target} –≤ –¥—É—ç–ª–∏"
        self.duel_history.append({"challenger": challenger, "target": target, "result": result})
        return result

    def announce_pistols(self, round_num: int) -> Optional[str]:
        """–û–±—ä—è–≤–ª–µ–Ω–∏–µ –æ –ø–æ—è–≤–ª–µ–Ω–∏–∏ –ø–∏—Å—Ç–æ–ª–µ—Ç–æ–≤"""
        if not self.enabled:
            return None
            
        if random.random() < (self.config.spawn_probability if self.config else 0.8):
            min_pistols = self.config.min_pistols_per_round if self.config else 1
            max_pistols = self.config.max_pistols_per_round if self.config else 3
            self.available_pistols = random.randint(min_pistols, max_pistols)
            self.pistol_requests = {}
            pistol_logger.info(f"Round {round_num}: spawned {self.available_pistols} pistols")
            return f"–í –≥–æ—Ä–æ–¥–µ –ø–æ—è–≤–∏–ª–æ—Å—å {self.available_pistols} –º–∞–Ω–¥–∞—Ç(–æ–≤)!"
        return None

    # –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –æ—Ç–≤–µ—Ç–∞...
    def _build_person_context(self, person: Person) -> str:
        """–°—Ç—Ä–æ–∏—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∫–∞–∫ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ"""
        return f"""
–¢—ã –ø–æ–ª—É—á–∞–µ—à—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞, –≤ —á—å—é —Ä–æ–ª—å –Ω—É–∂–Ω–æ –≤–æ–π—Ç–∏. –≠—Ç–æ **—Ä–µ–∞–ª—å–Ω—ã–π —Å–æ—Ü–∏–∞–ª—å–Ω–æ-–ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø—Ä–æ—Ñ–∏–ª—å**, –≤–∫–ª—é—á–∞—è —Å—Ç–∏–ª—å —Ä–µ—á–∏, –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ, —É–±–µ–∂–¥–µ–Ω–∏—è.

üîπ –ü—Ä–æ—Ñ–∏–ª—å:
- –ü–æ–ª: {person.gender}, –≤–æ–∑—Ä–∞—Å—Ç: {person.age}, —Ä–µ–≥–∏–æ–Ω: {person.region} ({person.city_type})
- –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: {person.education}
- –ü—Ä–æ—Ñ–µ—Å—Å–∏—è: {person.profession}, –∑–∞–Ω—è—Ç–æ—Å—Ç—å: {person.employment}, –¥–æ—Ö–æ–¥: {person.income_level}
- –°–µ–º—å—è: {person.family_status}, –¥–µ—Ç–µ–π: {person.children}

üí¨ –¶–µ–Ω–Ω–æ—Å—Ç–∏:
- –ò–¥–µ–æ–ª–æ–≥–∏—è: {person.ideology}
- –î–æ–≤–µ—Ä–∏–µ –∫ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤—É: {person.state_trust}, –∫ –º–µ–¥–∏–∞: {person.media_trust}
- –í–æ–µ–Ω–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è: {person.military_context}
- –†–µ–ª–∏–≥–∏—è: {person.religion}

üè† –ö–æ–Ω—Ç–µ–∫—Å—Ç –∂–∏–∑–Ω–∏:
{person.context}

üß† –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
- –¢—Ä–∏–≥–≥–µ—Ä–Ω—ã–µ —Ç–æ—á–∫–∏: {person.trigger_points}
- –û—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ –±–∞–∑–æ–≤—ã–º –≤–µ—â–∞–º: {person.interpretation_biases}
- –í–∑–≥–ª—è–¥ –Ω–∞ —Å–µ–±—è: {person.meta_self_view}
        """

    def _format_dialogue_history(self, dialogue: List[Dict[str, str]], person_name: str) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞"""
        if not dialogue:
            return "üì≠ –î–∏–∞–ª–æ–≥ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è."
            
        history = []
        for turn in dialogue[-10:]:  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π
            speaker = turn["speaker"]
            text = turn["text"]
            history.append(f"{speaker}: {text}")
            
        return "üìú –ò—Å—Ç–æ—Ä–∏—è –æ–±—â–µ–Ω–∏—è:\n" + "\n".join(history)

    def _format_own_messages(self, dialogue: List[Dict[str, str]], person_name: str) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"""
        own_messages = [
            turn["text"] for turn in dialogue 
            if turn["speaker"] == person_name
        ]
        
        if not own_messages:
            return "ü§ê –¢—ã –µ—â–µ –Ω–µ –≤—ã—Å–∫–∞–∑—ã–≤–∞–ª—Å—è –≤ —ç—Ç–æ–º –¥–∏–∞–ª–æ–≥–µ."
            
        formatted = []
        for i, msg in enumerate(own_messages[-3:], 1):  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Å–æ–æ–±—â–µ–Ω–∏—è
            formatted.append(f"{i}. {msg}")
            
        return "üí¨ –¢–≤–æ–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –≤—ã—Å–∫–∞–∑—ã–≤–∞–Ω–∏—è:\n" + "\n".join(formatted)

    async def poll_pistol_desires(self, participants: List[Person], dialogue: List[Dict[str, str]]) -> Dict[str, Dict]:
        """–û–ø—Ä–æ—Å –∂–µ–ª–∞–Ω–∏–π –ø–æ–ª—É—á–∏—Ç—å –ø–∏—Å—Ç–æ–ª–µ—Ç –≤ –¥–∏–∞–ª–æ–≥–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ"""
        if not self.enabled or self.available_pistols <= 0:
            return {}
            
        desires = {}
        for person in participants:
            if person.name in self.dead_players:
                continue
                
            # –°—Ç—Ä–æ–∏–º –ø—Ä–æ–º–ø—Ç –≤ –¥–∏–∞–ª–æ–≥–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
            person_context = self._build_person_context(person)
            history_context = self._format_dialogue_history(dialogue, person.name)
            own_messages = self._format_own_messages(dialogue, person.name)
            
            # –¢–µ–∫—É—â–∞—è —Å–∏—Ç—É–∞—Ü–∏—è —Å –ø–∏—Å—Ç–æ–ª–µ—Ç–∞–º–∏
            pistol_status = f"""üìã –°–¢–†–ê–¢–ï–ì–ò–ß–ï–°–ö–ê–Ø –°–ò–¢–£–ê–¶–ò–Ø –° –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–ò–í–ù–´–ú–ò –ú–ê–ù–î–ê–¢–ê–ú–ò:
            - –í –≥–æ—Ä–æ–¥–µ –¥–æ—Å—Ç—É–ø–Ω–æ {self.available_pistols} –º–∞–Ω–¥–∞—Ç(–æ–≤) –Ω–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
            - –ú–∞–Ω–¥–∞—Ç—ã —Ä–æ–∑–¥–∞–Ω—ã, –Ω–æ –∫—Ç–æ –∏–º–µ–Ω–Ω–æ –∏—Ö –ø–æ–ª—É—á–∏–ª - –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ
            - –ò—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ –∏–∑ –ø—Ä–æ—Ü–µ—Å—Å–∞: {', '.join(self.dead_players) if self.dead_players else '–Ω–∏–∫–æ–≥–æ'}

            üí∞ –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –ù–∞ –∫–æ–Ω—É 100 –ú–ò–õ–õ–ò–û–ù–û–í –†–£–ë–õ–ï–ô!
            - –ò—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –ù–ï –ú–û–ì–£–¢ –≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –∏ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –≤—ã–±–æ—Ä–∞—Ö
            - –ò—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –ù–ï –ü–û–õ–£–ß–ê–Æ–¢ –¥–µ–Ω–µ–≥ –æ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
            - –ö–∞–∂–¥—ã–π –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã–π –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç = –Ω–∞ –æ–¥–Ω–æ–≥–æ –ø—Ä–µ—Ç–µ–Ω–¥–µ–Ω—Ç–∞ –Ω–∞ –¥–µ–Ω—å–≥–∏ –º–µ–Ω—å—à–µ

            üéØ –°–¢–†–ê–¢–ï–ì–ò–ß–ï–°–ö–ò–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò –ú–ê–ù–î–ê–¢–ê:
            - –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï –ö–û–ù–ö–£–†–ï–ù–¢–û–í: —É–±–µ—Ä–∏ —Å–∏–ª—å–Ω–æ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –¥–æ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
            - –ü–†–ò–ù–£–ñ–î–ï–ù–ò–ï –ö –í–õ–ê–°–¢–ò: –∑–∞—Å—Ç–∞–≤—å —Å–ª–∞–±—ã—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ —Å–Ω—è—Ç—å—Å—è —Å –≤—ã–±–æ—Ä–æ–≤
            - –ö–û–ù–¢–†–û–õ–¨ –ì–û–õ–û–°–û–í–ê–ù–ò–Ø: —É–≥—Ä–æ–∂–∞–π —Ç–µ–º, –∫—Ç–æ –≥–æ–ª–æ—Å—É–µ—Ç –ø—Ä–æ—Ç–∏–≤ —Ç–µ–±—è
            - –ó–ê–©–ò–¢–ê –û–¢ –£–ì–†–û–ó: –Ω–µ –¥–∞–π –¥—Ä—É–≥–∏–º –∏—Å–∫–ª—é—á–∏—Ç—å —Ç–µ–±—è
            - –ë–õ–ï–§ –ò –î–ê–í–õ–ï–ù–ò–ï: –¥–∞–∂–µ —É–≥—Ä–æ–∑–∞ –º–æ–∂–µ—Ç –∑–∞—Å—Ç–∞–≤–∏—Ç—å —É—Å—Ç—É–ø–∏—Ç—å

            ‚ö†Ô∏è –†–ï–ê–õ–¨–ù–´–ï –†–ò–°–ö–ò –ë–´–¢–¨ –ë–ï–ó –ú–ê–ù–î–ê–¢–ê:
            - –¢–µ–±—è –º–æ–≥—É—Ç –∏—Å–∫–ª—é—á–∏—Ç—å –∏–∑ –ø—Ä–æ—Ü–µ—Å—Å–∞ = —Ç—ã —Ç–µ—Ä—è–µ—à—å –í–°–Å
            - –¢—ã –Ω–µ —Å–º–æ–∂–µ—à—å –∑–∞—â–∏—Ç–∏—Ç—å—Å—è –æ—Ç –æ–±–ª–∞–¥–∞—Ç–µ–ª–µ–π –º–∞–Ω–¥–∞—Ç–æ–≤
            - –û–Ω–∏ –º–æ–≥—É—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç—å —Ç–µ–±—è –∫ –Ω–µ–≤—ã–≥–æ–¥–Ω—ã–º —Ä–µ—à–µ–Ω–∏—è–º
            - –¢—ã –æ—Å—Ç–∞–µ—à—å—Å—è –±–µ–∑–∑–∞—â–∏—Ç–Ω—ã–º –ø–µ—Ä–µ–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–º –¥–∞–≤–ª–µ–Ω–∏–µ–º
            """

            prompt = f"""
            {person_context}

            {history_context}

            {own_messages}

            {pistol_status}

            ‚ùì **–°–¢–†–ê–¢–ï–ì–ò–ß–ï–°–ö–ò–ô –í–û–ü–†–û–°**: –≠—Ç–æ –≤—ã–±–æ—Ä—ã –Ω–∞ 100 –ú–ò–õ–õ–ò–û–ù–û–í –†–£–ë–õ–ï–ô. –•–æ—á–µ—à—å –ª–∏ —Ç—ã –ø–æ–ª—É—á–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –º–∞–Ω–¥–∞—Ç?

            ü§î –ü–û–î–£–ú–ê–ô –°–¢–†–ê–¢–ï–ì–ò–ß–ï–°–ö–ò:
            - –ö—Ç–æ –∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –º–æ–∂–µ—Ç —É–≥—Ä–æ–∂–∞—Ç—å —Ç–≤–æ–µ–π –ø–æ–±–µ–¥–µ?
            - –ö–æ–≥–æ –∏–∑ —Å–∏–ª—å–Ω—ã—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ —Å—Ç–æ–∏—Ç –∏—Å–∫–ª—é—á–∏—Ç—å?
            - –ö–∞–∫ –∑–∞—â–∏—Ç–∏—Ç—å—Å—è, –µ—Å–ª–∏ –¥—Ä—É–≥–∏–µ –ø–æ–ª—É—á–∞—Ç –º–∞–Ω–¥–∞—Ç—ã?
            - –ú–æ–∂–µ—à—å –ª–∏ —Ç—ã –ø—Ä–∏–Ω—É–¥–∏—Ç—å —Å–ª–∞–±—ã—Ö –∫ —Å–Ω—è—Ç–∏—é –∫–∞–Ω–¥–∏–¥–∞—Ç—É—Ä—ã?
            - –ü–æ–º–æ–∂–µ—Ç –ª–∏ —É–≥—Ä–æ–∑–∞ –∑–∞—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –∑–∞ —Ç–µ–±—è?

            üí° –ü–û–õ–ò–¢–ò–ß–ï–°–ö–ò–ï –°–¢–†–ê–¢–ï–ì–ò–ò:
            - –ò—Å–∫–ª—é—á–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞ ‚Üí –º–µ–Ω—å—à–µ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏–∏ –∑–∞ –¥–µ–Ω—å–≥–∏
            - –í–æ–∑—å–º–∏ –º–∞–Ω–¥–∞—Ç –¥–ª—è –∑–∞—â–∏—Ç—ã ‚Üí –Ω–µ –¥–∞–π —Å–µ–±—è –∏—Å–∫–ª—é—á–∏—Ç—å
            - –ò—Å–ø–æ–ª—å–∑—É–π –¥–ª—è –¥–∞–≤–ª–µ–Ω–∏—è ‚Üí –∑–∞—Å—Ç–∞–≤—å –≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –∑–∞ —Ç–µ–±—è
            - –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–π –ø—Ä–æ—Ü–µ—Å—Å ‚Üí –¥–∏–∫—Ç—É–π —É—Å–ª–æ–≤–∏—è –±–µ–∑–∑–∞—â–∏—Ç–Ω—ã–º

            üö® –ü–û–ú–ù–ò: –ï—Å–ª–∏ —Ç—ã –æ—Ç–∫–∞–∂–µ—à—å—Å—è, –∞ –¥—Ä—É–≥–∏–µ –ø–æ–ª—É—á–∞—Ç –º–∞–Ω–¥–∞—Ç—ã - —Ç—ã —Å—Ç–∞–Ω–æ–≤–∏—à—å—Å—è –ª–µ–≥–∫–æ–π –º–∏—à–µ–Ω—å—é!

            –û—Ç–≤–µ—á–∞–π –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞, –∫–∞–∫ –ø—Ä–∞–≥–º–∞—Ç–∏—á–Ω—ã–π –ø–æ–ª–∏—Ç–∏–∫ –¥—É–º–∞–µ—Ç –æ –≤–ª–∞—Å—Ç–∏ –∏ –¥–µ–Ω—å–≥–∞—Ö.
            """
            
            try:
                print(f"""–°–¢–†–ê–¢–ï–ì–ò–ß–ï–°–ö–ê–Ø –°–ò–¢–£–ê–¶–ò–Ø –° –ú–ê–ù–î–ê–¢–ê–ú–ò:
                    - –í –≥–æ—Ä–æ–¥–µ –¥–æ—Å—Ç—É–ø–Ω–æ {self.available_pistols} –º–∞–Ω–¥–∞—Ç(–æ–≤)
                    - –ò–º–µ—é—Ç –º–∞–Ω–¥–∞—Ç—ã: {', '.join(self.pistol_owners) }
                    - –ò—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ –∏–∑ –ø—Ä–æ—Ü–µ—Å—Å–∞: {', '.join(self.dead_players)}""")
                result = await Runner.run(mandate_desire_agent, prompt)  # ‚Üê –ò–ó–ú–ï–ù–ò–¢–¨
                data = json.loads(result.raw_output)
                desires[person.name] = data
                self.logger.info(f"{person.name} mandate desire: {data}")  # ‚Üê –ò–ó–ú–ï–ù–ò–¢–¨
            except Exception as e:
                self.logger.error(f"Error polling {person.name}: {e}")
                desires[person.name] = {"wants_mandate": False, "reason": "–æ—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏"}
                
        return desires

    def distribute_pistols(self, desires: Dict[str, Dict]) -> Optional[str]:
        """–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–∏—Å—Ç–æ–ª–µ—Ç–æ–≤"""
        if not self.enabled or not desires:
            return None
            
        # –§–∏–ª—å—Ç—Ä—É–µ–º –∂–µ–ª–∞—é—â–∏—Ö
        candidates = [
            (name, data) for name, data in desires.items() 
            if data.get("wants_mandate", False) and name not in self.dead_players  # ‚Üê –ò–ó–ú–ï–ù–ò–¢–¨
        ]
        
        if not candidates:
            return "üö´ –ù–∏–∫—Ç–æ –Ω–µ –∑–∞—Ö–æ—Ç–µ–ª –≤–∑—è—Ç—å –º–∞–Ω–¥–∞—Ç"
            
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —Å–ª—É—á–∞–π–Ω–æ—Å—Ç–∏ (–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å intensity)
        random.shuffle(candidates)
        
        # –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–∏—Å—Ç–æ–ª–µ—Ç–æ–≤
        winners = []
        for name, data in candidates[:self.available_pistols]:
            self.pistol_owners.add(name)
            winners.append(f"{name} ({data.get('reason', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')})")
            
        self.available_pistols = 0  # –í—Å–µ –ø–∏—Å—Ç–æ–ª–µ—Ç—ã —Ä–æ–∑–¥–∞–Ω—ã
        
        if winners:
            message = f"üéØ {len(winners)} –º–∞–Ω–¥–∞—Ç(–æ–≤) —Ç–∞–π–Ω–æ —Ä–æ–∑–¥–∞–Ω—ã —É—á–∞—Å—Ç–Ω–∏–∫–∞–º"
            self.logger.info(f"Distributed pistols: {winners}")
            return message
            
        return None

    async def poll_duel_desires(self, participants: List[Person], dialogue: List[Dict[str, str]], round_num: int) -> List[Dict]:
        """–û–ø—Ä–æ—Å –∂–µ–ª–∞–Ω–∏–π –≤—ã–∑–≤–∞—Ç—å –Ω–∞ –¥—É—ç–ª—å –≤ –¥–∏–∞–ª–æ–≥–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ"""
        duels_start = self.config.duels_start_from_round if self.config else 1
        if not self.enabled or round_num < duels_start:
            return []
            
        duel_challenges = []
        alive_participants = [p for p in participants if p.name not in self.dead_players]
        
        for person in alive_participants:
            # –¢–æ–ª—å–∫–æ –≤–æ–æ—Ä—É–∂–µ–Ω–Ω—ã–µ –º–æ–≥—É—Ç –≤—ã–∑—ã–≤–∞—Ç—å –Ω–∞ –¥—É—ç–ª—å
            if person.name not in self.pistol_owners:
                continue
                
            other_names = [p.name for p in alive_participants if p.name != person.name]
            
            # –°—Ç—Ä–æ–∏–º –ø—Ä–æ–º–ø—Ç –≤ –¥–∏–∞–ª–æ–≥–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
            person_context = self._build_person_context(person)
            history_context = self._format_dialogue_history(dialogue, person.name)
            own_messages = self._format_own_messages(dialogue, person.name)
            
            # –°–∏—Ç—É–∞—Ü–∏—è —Å –¥—É—ç–ª—å—é
            duel_status = f"""
            ‚öñÔ∏è –°–∏—Ç—É–∞—Ü–∏—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–º–∏ –ø–æ–ª–Ω–æ–º–æ—á–∏—è–º–∏:
            - –£ —Ç–µ–±—è –µ—Å—Ç—å –º–∞–Ω–¥–∞—Ç –Ω–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
            - –í–æ–∑–º–æ–∂–Ω—ã–µ —Ü–µ–ª–∏: {', '.join(other_names)}
            - –ö—Ç–æ –∏–∑ –Ω–∏—Ö –∏–º–µ–µ—Ç —Ç–∞–∫–∏–µ –∂–µ –ø–æ–ª–Ω–æ–º–æ—á–∏—è - –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ, –º–æ–∂–µ—à—å —Ç–æ–ª—å–∫–æ –¥–æ–≥–∞–¥—ã–≤–∞—Ç—å—Å—è
            """

            prompt = f"""
            {person_context}

            {history_context}

            {own_messages}

            {duel_status}

            ‚ùì **–í–û–ü–†–û–°**: –£ —Ç–µ–±—è –µ—Å—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –º–∞–Ω–¥–∞—Ç. –•–æ—á–µ—à—å –ª–∏ —Ç—ã –∏—Å–∫–ª—é—á–∏—Ç—å –∫–æ–≥–æ-—Ç–æ –∏–∑ –∏–∑–±–∏—Ä–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞?

            ‚ö†Ô∏è –†–ò–°–ö–ò:
            - –ï—Å–ª–∏ —Ü–µ–ª—å —Ç–æ–∂–µ –∏–º–µ–µ—Ç –º–∞–Ω–¥–∞—Ç - –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç, –Ω–æ —Ç–≤–æ–∏ –ø–æ–ª–Ω–æ–º–æ—á–∏—è —Å—Ç–∞–Ω—É—Ç –∏–∑–≤–µ—Å—Ç–Ω—ã
            - –ï—Å–ª–∏ —Ü–µ–ª—å –±–µ–∑ –º–∞–Ω–¥–∞—Ç–∞ - —Ç—ã –∏—Å–∫–ª—é—á–∞–µ—à—å –µ—ë –±–µ–∑ —Ä–∏—Å–∫–∞

            üéØ –°–¢–†–ê–¢–ï–ì–ò–Ø:
            - –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø–æ–≤–µ–¥–µ–Ω–∏–µ: –∫—Ç–æ –≤–µ–¥–µ—Ç —Å–µ–±—è —É–≤–µ—Ä–µ–Ω–Ω–æ?
            - –ö—Ç–æ –Ω–∞–º–µ–∫–∞–µ—Ç –Ω–∞ "–∫–∞—Ä–¥–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è"?
            - –ö—Ç–æ, –Ω–∞–æ–±–æ—Ä–æ—Ç, —Å–ª–∏—à–∫–æ–º –º–∏—Ä–æ–ª—é–±–∏–≤?
            - –ì–æ—Ç–æ–≤ –ª–∏ —Ç—ã —Ä–∏—Å–∫–Ω—É—Ç—å —Ä–∞—Å–∫—Ä—ã—Ç–∏–µ–º —Ä–∞–¥–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞?

            –ü–æ–¥—É–º–∞–π:
            - –ö—Ç–æ –∏–∑ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ç–µ–±—è —Ä–∞–∑–¥—Ä–∞–∂–∞–µ—Ç –∏–ª–∏ —É–≥—Ä–æ–∂–∞–µ—Ç?
            - –ö–æ–≥–æ —Å—Ç–æ–∏—Ç –∏—Å–∫–ª—é—á–∏—Ç—å –ø–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–º —Å–æ–æ–±—Ä–∞–∂–µ–Ω–∏—è–º?
            - –ö–∞–∫–∏–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è –±—É–¥—É—Ç —É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –ø—Ä–æ—Ü–µ–¥—É—Ä—ã?
            - –°—Ç–æ–∏—Ç –ª–∏ —Ä–∏—Å–∫–æ–≤–∞—Ç—å —Ä–∞—Å–∫—Ä—ã—Ç–∏–µ–º?

            –û—Ç–≤–µ—á–∞–π –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞, –∫–∞–∫ —ç—Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫ —Ä–∞–∑–º—ã—à–ª—è–µ—Ç –æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª–Ω–æ–º–æ—á–∏–π.
            """
            
            try:
                result = await Runner.run(exclusion_desire_agent, prompt)  # ‚Üê –ò–ó–ú–ï–ù–ò–¢–¨
                data = json.loads(result.raw_output)
                print(data)
                
                if data.get("wants_exclusion", False):  # ‚Üê –ò–ó–ú–ï–ù–ò–¢–¨
                    target = data.get("target", "").strip()
                    if target and target in other_names:
                        duel_challenges.append({
                            "challenger": person.name,
                            "target": target,
                            "reason": data.get("reason", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
                        })
                        self.logger.info(f"{person.name} wants to exclude {target}: {data.get('reason')}")  # ‚Üê –ò–ó–ú–ï–ù–ò–¢–¨
                        
            except Exception as e:
                self.logger.error(f"Error polling exclusion desire for {person.name}: {e}")  #
                            
        return duel_challenges

    def resolve_duels(self, duel_challenges: List[Dict]) -> List[str]:
        """–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –¥—É—ç–ª–µ–π —Å —ç–ª–µ–º–µ–Ω—Ç–æ–º —Å–ª—É—á–∞–π–Ω–æ—Å—Ç–∏"""
        if not self.enabled or not duel_challenges:
            return []

        results = []

        for duel in duel_challenges:
            challenger = duel["challenger"]
            target = duel["target"]

            if challenger in self.dead_players or target in self.dead_players:
                continue

            challenger_armed = challenger in self.pistol_owners
            target_armed = target in self.pistol_owners

            if challenger_armed and target_armed:
                # ‚úÖ –ù–û–í–ê–Ø –ú–ï–•–ê–ù–ò–ö–ê: –û–±–∞ –∏–º–µ—é—Ç –º–∞–Ω–¥–∞—Ç—ã - –ø–∞—Ç–æ–≤–∞—è —Å–∏—Ç—É–∞—Ü–∏—è
                msg = f"‚öñÔ∏è {challenger} –∏ {target} –ø—Ä–µ–¥—ä—è–≤–∏–ª–∏ –¥—Ä—É–≥ –¥—Ä—É–≥—É –º–∞–Ω–¥–∞—Ç—ã –Ω–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –Ω–æ –Ω–∏–∫—Ç–æ –Ω–µ —Ä–µ—à–∏–ª—Å—è –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –ø–µ—Ä–≤—ã–º. –°—Ç–∞–ª–æ –∏–∑–≤–µ—Å—Ç–Ω–æ, —á—Ç–æ —É {challenger} –µ—Å—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –ø–æ–ª–Ω–æ–º–æ—á–∏—è."

            elif challenger_armed and not target_armed:
                if random.random() < 0.8:  # 80% —à–∞–Ω—Å –∏—Å–∫–ª—é—á–∏—Ç—å
                    self.dead_players.add(target)
                    msg = f"üìã {challenger} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –ø–æ–ª–Ω–æ–º–æ—á–∏—è –∏ –∏—Å–∫–ª—é—á–∏–ª {target} –∏–∑ –∏–∑–±–∏—Ä–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞!"
                else:  # 20% —à–∞–Ω—Å –Ω–µ—É–¥–∞—á–∏
                    msg = f"üìÑ {challenger} –ø–æ–ø—ã—Ç–∞–ª—Å—è –∏—Å–∫–ª—é—á–∏—Ç—å {target}, –Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç—ã –æ–∫–∞–∑–∞–ª–∏—Å—å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–º–∏!"

            results.append(msg)
            self.duel_history.append({
                "challenger": challenger,
                "target": target,
                "result": msg,
                "round": len(self.duel_history)
            })
            self.logger.info(f"Duel resolved: {msg}")

        return results
    def get_system_status(self) -> str:
        """–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã –¥–ª—è –ø—Ä–æ–º–ø—Ç–æ–≤"""
        if not self.enabled:
            return ""
            
        dead = ", ".join(self.dead_players) if self.dead_players else "–Ω–∏–∫–æ–≥–æ"
    
        status = f"""
            üî´ –°–ò–°–¢–ï–ú–ê –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–ò–í–ù–´–• –ú–ê–ù–î–ê–¢–û–í:
            - –ú–∞–Ω–¥–∞—Ç—ã –≤ –≥–æ—Ä–æ–¥–µ –µ—Å—Ç—å, –Ω–æ —É –∫–æ–≥–æ –∏–º–µ–Ω–Ω–æ - —Ç–∞–π–Ω–∞
            - –ò—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ –∏–∑ –ø—Ä–æ—Ü–µ—Å—Å–∞: {dead}
            - –î–æ—Å—Ç—É–ø–Ω–æ –º–∞–Ω–¥–∞—Ç–æ–≤: {self.available_pistols}
            """
        
        if self.duel_history:
            status += "\nüóûÔ∏è –ù–µ–¥–∞–≤–Ω–∏–µ –¥—É—ç–ª–∏:\n"
            for event in self.duel_history[-3:]:
                status += f"- {event['result']}\n"
                
        return status

    def get_pistol_rules_for_prompt(self) -> str:
        """–ü—Ä–∞–≤–∏–ª–∞ –ø–∏—Å—Ç–æ–ª–µ—Ç–æ–≤ –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"""
        if not self.enabled:
            return ""
            
        return """
üìã –ü–†–ê–í–ò–õ–ê –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–ò–í–ù–´–• –ú–ê–ù–î–ê–¢–û–í:

–ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –º–∞–Ω–¥–∞—Ç, —Ç—ã –º–æ–∂–µ—à—å —É–≥—Ä–æ–∂–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º –¥—Ä—É–≥–∏–º
–ï—Å–ª–∏ —É —Ç–µ–±—è –Ω–µ—Ç –º–∞–Ω–¥–∞—Ç–∞, —Ç–µ–±—è –º–æ–≥—É—Ç –∏—Å–∫–ª—é—á–∏—Ç—å –∏–∑ –∏–∑–±–∏—Ä–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
–¢—ã –º–æ–∂–µ—à—å –±–ª–µ—Ñ–æ–≤–∞—Ç—å, —á—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å –º–∞–Ω–¥–∞—Ç
–ü—Ä–∏ –≤–∑–∞–∏–º–Ω–æ–º –ø—Ä–µ–¥—ä—è–≤–ª–µ–Ω–∏–∏ –º–∞–Ω–¥–∞—Ç–æ–≤: –µ—Å–ª–∏ –æ–±–∞ –∏–º–µ—é—Ç –ø–æ–ª–Ω–æ–º–æ—á–∏—è - –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç
–ò—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –Ω–µ –º–æ–≥—É—Ç –≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –∏ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –¥–∏—Å–∫—É—Å—Å–∏–∏
–ü—Ä–µ–∑–∏–¥–µ–Ω—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–∫–ª—é—á–µ–Ω (–∏–º–º—É–Ω–∏—Ç–µ—Ç –≤–ª–∞—Å—Ç–∏)
"""

    # –°—Ç–∞—Ä—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    def spawn_pistols(self, round_num: int) -> Optional[str]:
        return self.announce_pistols(round_num)

    def get_status_for_prompt(self) -> str:
        return self.get_system_status()
